From 840021545095c78e29877446f85f95e40913c740 Mon Sep 17 00:00:00 2001
From: humengyu <hellohumengyu@gmail.com>
Date: Wed, 15 Mar 2023 00:45:28 +0800
Subject: [PATCH 1/6] Fix NPE for s3 proxy v2

---
 .../s3/signature/AwsSignatureProcessor.java   |  9 +++-
 .../s3/signature/StringToSignProducer.java    | 47 +++++++++++++++++++
 2 files changed, 54 insertions(+), 2 deletions(-)

diff --git a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/AwsSignatureProcessor.java b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/AwsSignatureProcessor.java
index 21c3d4ad1786..3cb80a615828 100644
--- a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/AwsSignatureProcessor.java
+++ b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/AwsSignatureProcessor.java
@@ -114,8 +114,13 @@ public AwsAuthInfo getAuthInfo() throws S3Exception {
       SignatureInfo signatureInfo = parseSignature();
       String stringToSign = "";
       if (signatureInfo.getVersion() == SignatureInfo.Version.V4) {
-        stringToSign =
-                StringToSignProducer.createSignatureBase(signatureInfo, mContext);
+        if (mContext != null) {
+          stringToSign =
+              StringToSignProducer.createSignatureBase(signatureInfo, mContext);
+        } else {
+          stringToSign =
+              StringToSignProducer.createSignatureBase(signatureInfo, mServletRequest);
+        }
       }
       String awsAccessId = signatureInfo.getAwsAccessId();
       // ONLY validate aws access id when needed.
diff --git a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
index d47b977a95b5..24929d460edd 100644
--- a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
+++ b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
@@ -36,11 +36,15 @@
 import java.time.temporal.ChronoUnit;
 import java.util.ArrayList;
 import java.util.Collections;
+import java.util.Enumeration;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.StringJoiner;
+import java.util.TreeMap;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
+import javax.servlet.http.HttpServletRequest;
 import javax.ws.rs.container.ContainerRequestContext;
 
 /**
@@ -83,6 +87,27 @@ public static String createSignatureBase(
             context.getUriInfo().getQueryParameters(), false));
   }
 
+  /**
+   * Convert signature info to strToSign.
+   *
+   * @param signatureInfo
+   * @param request
+   * @return signature string
+   * @throws Exception
+   */
+  public static String createSignatureBase(
+      SignatureInfo signatureInfo,
+      HttpServletRequest request
+  ) throws Exception {
+    URI uri = new URI(request.getRequestURL().toString());
+    return createSignatureBase(signatureInfo,
+        uri.getScheme(),
+        request.getMethod(),
+        uri.getPath(),
+        getHeaders(request),
+        getParameterMap(request));
+  }
+
   /**
    * Convert request info to strToSign.
    *
@@ -139,6 +164,28 @@ public static String createSignatureBase(
     return strToSign.toString();
   }
 
+  private static Map<String, String> getHeaders(HttpServletRequest request) {
+    Map<String, String> result = new TreeMap<>(String::compareToIgnoreCase);
+    Enumeration<String> headerNames = request.getHeaderNames();
+    if (headerNames != null) {
+      while (headerNames.hasMoreElements()) {
+        String name = headerNames.nextElement();
+        String value = request.getHeader(name);
+        result.put(name, value);
+      }
+    }
+    return result;
+  }
+
+  private static Map<String, String> getParameterMap(HttpServletRequest request) {
+    Map<String, String[]> parameterMap = request.getParameterMap();
+    Map<String, String> result = new HashMap<>();
+    for (String key : parameterMap.keySet()) {
+      result.put(key, parameterMap.get(key)[0]);
+    }
+    return result;
+  }
+
   /**
    * Compute a hash for provided string.
    * @param payload

From bef2024f993618b3c325b1bd82c9e0b1594d5a88 Mon Sep 17 00:00:00 2001
From: humengyu <hellohumengyu@gmail.com>
Date: Wed, 15 Mar 2023 01:38:27 +0800
Subject: [PATCH 2/6] small fix

---
 .../proxy/s3/signature/StringToSignProducer.java     | 12 +++++-------
 1 file changed, 5 insertions(+), 7 deletions(-)

diff --git a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
index 24929d460edd..6a5c1086d9df 100644
--- a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
+++ b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
@@ -37,13 +37,14 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Enumeration;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.Map.Entry;
 import java.util.StringJoiner;
 import java.util.TreeMap;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
+import java.util.stream.Collectors;
 import javax.servlet.http.HttpServletRequest;
 import javax.ws.rs.container.ContainerRequestContext;
 
@@ -178,12 +179,9 @@ private static Map<String, String> getHeaders(HttpServletRequest request) {
   }
 
   private static Map<String, String> getParameterMap(HttpServletRequest request) {
-    Map<String, String[]> parameterMap = request.getParameterMap();
-    Map<String, String> result = new HashMap<>();
-    for (String key : parameterMap.keySet()) {
-      result.put(key, parameterMap.get(key)[0]);
-    }
-    return result;
+    return request.getParameterMap().entrySet()
+        .stream()
+        .collect(Collectors.toMap(Entry::getKey, e -> e.getValue()[0]));
   }
 
   /**

From c82896cd99c4d1eaf2e798a7d4d17ae012078689 Mon Sep 17 00:00:00 2001
From: humengyu <hellohumengyu@gmail.com>
Date: Wed, 15 Mar 2023 03:57:48 +0800
Subject: [PATCH 3/6] Update
 core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java

Co-authored-by: lucyge2022 <111789461+lucyge2022@users.noreply.github.com>
---
 .../java/alluxio/proxy/s3/signature/StringToSignProducer.java   | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
index 6a5c1086d9df..2f4481c03867 100644
--- a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
+++ b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
@@ -102,7 +102,7 @@ public static String createSignatureBase(
   ) throws Exception {
     URI uri = new URI(request.getRequestURL().toString());
     return createSignatureBase(signatureInfo,
-        uri.getScheme(),
+        request.getScheme()
         request.getMethod(),
         uri.getPath(),
         getHeaders(request),

From 9ee1c90a6cc7c6430f15002281e58f34e0bf4003 Mon Sep 17 00:00:00 2001
From: humengyu <hellohumengyu@gmail.com>
Date: Wed, 15 Mar 2023 03:57:54 +0800
Subject: [PATCH 4/6] Update
 core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java

Co-authored-by: lucyge2022 <111789461+lucyge2022@users.noreply.github.com>
---
 .../java/alluxio/proxy/s3/signature/StringToSignProducer.java   | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
index 2f4481c03867..413b3761df24 100644
--- a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
+++ b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
@@ -104,7 +104,7 @@ public static String createSignatureBase(
     return createSignatureBase(signatureInfo,
         request.getScheme()
         request.getMethod(),
-        uri.getPath(),
+        request.getRequestURI()
         getHeaders(request),
         getParameterMap(request));
   }

From 194a69eab418520d2d8ccb66ad1226c25dd4d9ee Mon Sep 17 00:00:00 2001
From: humengyu <hellohumengyu@gmail.com>
Date: Wed, 15 Mar 2023 04:00:51 +0800
Subject: [PATCH 5/6] small fix

---
 .../alluxio/proxy/s3/signature/StringToSignProducer.java     | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
index 413b3761df24..191ab753149e 100644
--- a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
+++ b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
@@ -100,11 +100,10 @@ public static String createSignatureBase(
       SignatureInfo signatureInfo,
       HttpServletRequest request
   ) throws Exception {
-    URI uri = new URI(request.getRequestURL().toString());
     return createSignatureBase(signatureInfo,
-        request.getScheme()
+        request.getScheme(),
         request.getMethod(),
-        request.getRequestURI()
+        request.getRequestURI(),
         getHeaders(request),
         getParameterMap(request));
   }

From 624204b5a7e969739abcf0196e2846e593767bb8 Mon Sep 17 00:00:00 2001
From: humengyu <hellohumengyu@gmail.com>
Date: Wed, 15 Mar 2023 12:25:39 +0800
Subject: [PATCH 6/6] add comment for new method

---
 .../proxy/s3/signature/StringToSignProducer.java      | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
index 191ab753149e..d7abf1c746af 100644
--- a/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
+++ b/core/server/proxy/src/main/java/alluxio/proxy/s3/signature/StringToSignProducer.java
@@ -164,6 +164,11 @@ public static String createSignatureBase(
     return strToSign.toString();
   }
 
+  /**
+   * Get all headers by given http request, and the result map will ignore case.
+   * @param request
+   * @return
+   */
   private static Map<String, String> getHeaders(HttpServletRequest request) {
     Map<String, String> result = new TreeMap<>(String::compareToIgnoreCase);
     Enumeration<String> headerNames = request.getHeaderNames();
@@ -177,6 +182,12 @@ private static Map<String, String> getHeaders(HttpServletRequest request) {
     return result;
   }
 
+  /**
+   * Get all parameters by given http request,
+   * if there are multiple values for the same key, the first one will be taken.
+   * @param request
+   * @return
+   */
   private static Map<String, String> getParameterMap(HttpServletRequest request) {
     return request.getParameterMap().entrySet()
         .stream()
